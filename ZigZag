public class ZigZag {
    public class Node{
        int data;
        Node next;

      public Node(int data){
            this.data = data;
            this.next = null;
       }
      }
        static Node head;
        static Node tail;

        public void addFirst(int data){
          Node newNode = new Node(data);
          if(head == null){
              head=tail=newNode;
              return;
          }
          newNode.next = head;
          head = newNode;

      }
      public void print(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }
        System.out.println("null");
    }


         public void zigZag(){
            //find mid
            Node slow = head;
            Node fast = head.next;

            while(fast != null && fast.next != null){
                slow = slow.next;
                fast = fast.next.next;
            }
            Node mid = slow;

            //reverse 2nd half 
            Node curr = mid.next;
            mid.next = null;
            Node prev = null;
            Node next;
            while(curr != null){
                next = curr.next;
                curr.next = prev;
                prev = curr;
                curr = next;
            }
            Node left = head;
            Node right = prev;
            Node nextL,nextR;
            

            //alt merge - zig-zag merge
            while(left != null && right != null){
                nextL = left.next;
                left.next = right;
                nextR = right.next;
                right.next = nextL;

                left = nextL;
                right = nextR;


            }

        }

        public static void main(String[] args) {
          ZigZag ll = new ZigZag();
            
            ll.addFirst(5);
            ll.addFirst(4);
            ll.addFirst(3);
            ll.addFirst(2);
            ll.addFirst(1);

            ll.print();
            ll.zigZag();
            ll.print();
        }

    }

