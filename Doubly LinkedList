public class Doubly {
    
    public class Node{
        int data;
        Node next;

        Node prev;

      public Node(int data){
            this.data = data;
            this.next = null;
            this.prev = null;
       }
    }
        static Node head;
        static Node tail;
        static int size;

        public void addFirst(int data){

            Node newNode = new Node(data);
            size++;
            if(head == null){
                head=tail=newNode;
                return;
            }
            newNode.next = head;
            head.prev = newNode;
            head = newNode;


        }
        //print
        public void print(){
            Node temp = head;
            while(temp != null){
                System.out.print(temp.data + " <-> ");
                temp = temp.next;
            }
            System.out.println("null");
        }

        public int removefirst(){
            if(head == null){
                System.out.println("DLL is empty");
                return Integer.MIN_VALUE;
            }

            if(size == 1){
                int val = head.data;
                head = tail = null;
                size--;
                head.prev = null;
                return val;
            }
            int val = head.data;
            head = head.next;
            head.prev = null;
            size--;
            return val;

        }

        public static void main(String[] args) {
           
           Doubly ll = new Doubly();
          
            ll.addFirst(3);
            ll.addFirst(2);
            ll.addFirst(1);

            ll.print();
            System.out.println(ll.size);
            ll.removefirst();
            ll.print();
            System.out.println(ll.size);

        }

}
